name: Create Branch File

on:
  push:
    branches-ignore:
      - main

jobs:
  create_file:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Get branch name
      id: branch_name
      run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

    - name: Read ImageTag from values.yaml
      id: read_image_tag
      run: |
        BRANCH_NAME="${{ steps.branch_name.outputs.branch }}"
        VALUES_FILE="Application/gotham-demo/develop/values-${BRANCH_NAME}.yaml"

        if [ -f "$VALUES_FILE" ]; then
          IMAGE_TAG=$(yq r "$VALUES_FILE" 'image.tag')
          echo "::set-output name=image_tag::$IMAGE_TAG"
        else
          echo "values.yaml not found for branch $BRANCH_NAME"
          echo "::set-output name=image_tag::"
        fi
      shell: bash

    - name: Create Branch File
      run: |
        BRANCH_NAME="${{ steps.branch_name.outputs.branch }}"
        IMAGE_TAG="${{ steps.read_image_tag.outputs.image_tag }}"
        FILE_PATH="Application/gotham-demo/develop/branch/${BRANCH_NAME}.yaml"

        echo "branchName: $BRANCH_NAME" > $FILE_PATH
        echo "ImageTag: $IMAGE_TAG" >> $FILE_PATH

        # Commit and push only the new file to the 'main' branch
        if [[ "$BRANCH_NAME" == "main" ]]; then
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout main  # Switch to the main branch
          git add $FILE_PATH  # Stage the new file
          git commit -m "Create branch file for $BRANCH_NAME"
          git push
        fi
      shell: bash

    # Optionally, you can add a step to skip the 'main' branch if needed
    - name: Skip 'main' branch
      if: steps.branch_name.outputs.branch == 'main'
      run: exit 0  # Exit with success status if the branch is 'main'
