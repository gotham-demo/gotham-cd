image:
  ## Name of the image you want to build/deploy
  ## Defaults to the release name
  name: quay.io/gotham/batman
  ## Tag that you want to build/deploy
  tag: 797cd83
## Application/Deployment-specific values (For configuring Deployment, Service, Route, ConfigMap, etc)
deploy:
  ## Number of pod replicas to deploy
  replicas: 1
  ## Freeform resources. More information: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
  #  limits:
  #    cpu: 100m
  #    memory: 256Mi
  #  requests:
  #    cpu: 50m
  #    memory: 128Mi
  revisionHistoryLimit: 0
  restartPolicy: Always
  strategy:
  ## type can Be RollingUpdate Or Recreate
    type: Recreate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%

  ## Type of service to create. More information: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  serviceType: ClusterIP
  ## Freeform service ports. More information: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
  ports:
    - name: http1
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: http2
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: http3
      port: 8082
      targetPort: 8082
      protocol: TCP
  ## For creating a Route, allowing your application to be accessed from outside the OCP cluster
  route:
    enabled: false
    targetPort: http
    ## More information: https://docs.openshift.com/container-platform/4.6/networking/routes/secured-routes.html
    tls:
      enabled: false
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
      ## IMPORTANT: Do not check 'key' into git!
      key:
      caCertificate:
      certificate:
      destinationCACertificate:
  ingress:
    enabled: true
    Domain: apps-crc.testing
    ## More information: https://docs.openshift.com/container-platform/4.6/networking/routes/secured-routes.html
    tls:
      enabled: true
      termination: edge
      ## IMPORTANT: Do not check 'key' into git!
  ## Freeform Liveness Probe. More information: https://docs.openshift.com/container-platform/4.6/applications/application-health.html#application-health-about_application-health
  livenessProbe:
    httpGet:
      path: /health/liveliness
      port: http1
  ## If you don't want a livenessProbe, override like this in your values file
  # livenessProbe: ''

  ## Freeform Readiness Probe. More information: https://docs.openshift.com/container-platform/4.6/applications/application-health.html#application-health-about_application-health
  readinessProbe:
    httpGet:
      path: /health/readiness
      port: http1
  ## If you don't want a readinessProbe, override like this in your values file
  # readinessProve: ''

  ## Freeform env. More information: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  env:
    - name: IMAGE
      value: quay.io/gotham/batman
    - name: TAG
      value: "4a7050d"
  ## Freeform envFrom. More information: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables
  envFrom:
  #  - configMapRef:
  #      name: special-config

  ## Application properties file for configuring the app
  applicationProperties:
    ## Determines if application properties should be created in a configmap and mounted to the application container
    enabled: true
    ## Location to mount the properties file
    mountPath: /tmp/html/
    ## Application properties file contents
    fileName: index.html
    properties: |-
      <!DOCTYPE html>
      <html>
      <head>
          <title>I'm Batman!!</title>
      </head>
      <body>
          <h1>I'm Batman App</h1>
          <br>
          <img src="image/kargo-logo.png" alt="kargo1">
          <br>
          <img src="image/1329876.png" alt="Batman">
      </body>
      </html>
  ## Freeform volume mounts. More information: https://kubernetes.io/docs/concepts/storage/volumes/
  volumeMounts:
  #  - name: my-config
  #    mountPath: /etc/config

  ## Freeform volumes. More information: https://kubernetes.io/docs/concepts/storage/volumes/
  volumes:
  #  - name: my-config
  #    configMap:
  #      name: my-configmap

  ## Freeform init containers: More information: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  initContainers:
  #  - name: my-init-container
  #    command: ["echo", "hello"]
  #    image: registry.redhat.io/ubi8/ubi-minimal

  ## Freeform containers: More information: https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
  extraContainers:
   - name: my-extra-container-1
     image: quay.io/gotham/batman:797cd83
     resources:
      requests:
        cpu: 250m
        memory: 128Mi
     workingDir: /tmp
     livenessProbe:
    #    httpGet:
    #      path: /health/liveliness
    #      port: 8081
    #  readinessProbe:
    #    httpGet:
    #      path: /health/readiness
    #      port: 8081
     args:
     - sleep
     - "20"
     - "&&"
     - "echo"
     - "i am done"
     env:
      - name: PORT
        value: "8081"
      - name: NAME
        value: "APP1"
     volumeMounts:
      - name: application-properties
        mountPath: /tmp/html/
   - name: my-extra-container-2
     image: quay.io/gotham/batman:797cd83
     workingDir: /tmp
     readinessProbe:
       httpGet:
         path: /health/readiness
         port: 8082
     livenessProbe:
       httpGet:
         path: /health/liveliness
         port: 8082
     args:
     - "node"
     - "app.js"
     env:
      - name: PORT
        value: "8082"
      - name: NAME
        value: "APP2"
     volumeMounts:
      - name: application-properties
        mountPath: /tmp/html/
global:
  ## Override the release name
  nameOverride: gotham
  serviceName: batman-gh
  runTime: nodejs
  namespace: demo-develop
